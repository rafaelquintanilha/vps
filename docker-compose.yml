services:
  caddy:
    image: caddy:2
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - web

  n8n:
    build:
      context: ./n8n-playwright
      dockerfile: Dockerfile
    restart: always
    environment:
      - TZ=${TIMEZONE}
      - GENERIC_TIMEZONE=${TIMEZONE}
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - WEBHOOK_URL=${N8N_WEBHOOK_URL}
      - N8N_EDITOR_BASE_URL=${N8N_EDITOR_BASE_URL}
      - N8N_PROTOCOL=${N8N_PROTOCOL}
      - N8N_HOST=${N8N_HOST}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      
      # Playwright & Node modules
      - NODE_FUNCTION_ALLOW_EXTERNAL=puppeteer-core,playwright-core
      - NODE_FUNCTION_ALLOW_BUILTIN=*
      - NODE_PATH=/home/node/node_modules:/usr/local/lib/node_modules
      
      # Chrome/Chromium environment
      - CHROME_BIN=/usr/bin/chromium-browser
      - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
      - PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser
      - PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1
      - PLAYWRIGHT_CHROMIUM_EXECUTABLE_PATH=/usr/bin/chromium-browser

    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - web

  mmatrends-cron:
    build:
      context: ./apps/mmatrends
      dockerfile: Dockerfile.cron
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - ./apps/mmatrends/logs:/var/log
    restart: always

  metabase:
    image: metabase/metabase:latest
    restart: always
    ports:
      - "${METABASE_PORT:-3000}:3000"
    environment:
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=${METABASE_DB_NAME}
      - MB_DB_PORT=5432
      - MB_DB_USER=${METABASE_DB_USER}
      - MB_DB_PASS=${METABASE_DB_PASS}
      - MB_DB_HOST=postgres
      - JAVA_TIMEZONE=${TIMEZONE}
      # Performance settings
      - JAVA_TOOL_OPTIONS=-Xmx${METABASE_JAVA_HEAP:-2g}
      # Additional settings
      - MB_SITE_NAME=${METABASE_SITE_NAME:-Analytics}
      - MB_SITE_URL=${METABASE_SITE_URL}
    volumes:
      - metabase_plugins:/plugins
      - /dev/urandom:/dev/random:ro
    networks:
      - web
    depends_on:
      - postgres

  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    ports:
      - "${REDIS_EXTERNAL_PORT}:6379"
    volumes:
      - redis_data:/data
    environment:
      - TZ=${TIMEZONE}
    networks:
      - web

  postgres:
    image: postgres:16-alpine
    restart: always
    ports:
      - "${POSTGRES_EXTERNAL_PORT:-5432}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DEFAULT_DB}
      - TZ=${TIMEZONE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    networks:
      - web

volumes:
  caddy_data:
  caddy_config:
  n8n_data:
  redis_data:
  postgres_data:
  metabase_plugins:

networks:
  web:
    driver: bridge